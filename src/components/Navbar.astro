---
// src/components/Navbar.astro
// ============================================
// üß≠ CMDOLA - Navigation Bar avec DaisyUI
// ============================================

import api from '../lib/api'; // ‚úÖ Import par d√©faut

interface Props {
  restaurantName?: string;
  cartItems?: number;
  cartTotal?: number;
  userAvatar?: string;
  userName?: string;
  showCart?: boolean;
  showProfile?: boolean;
}

const {
  restaurantName,
  cartItems = 0,
  cartTotal = 0,
  userAvatar = 'https://img.daisyui.com/images/stock/photo-1534528741775-53994a69daeb.webp',
  userName = 'Utilisateur',
  showCart = true,
  showProfile = true,
} = Astro.props;

// R√©cup√©rer le nom du restaurant depuis l'API si non fourni
let displayName = restaurantName;
if (!displayName) {
  try {
    // ‚úÖ Utilise d√©j√† api.config.get() correctement (pas de restaurant_id)
    const config = await api.config.get();
    displayName = config.nom || 'CMDOLA';
  } catch (error) {
    console.warn('‚ö†Ô∏è  Config restaurant non accessible, utilisation du nom par d√©faut');
    displayName = 'CMDOLA';
  }
}

// Formater le prix
const formatPrice = (price: number) => {
  return new Intl.NumberFormat('fr-BE', {
    style: 'currency',
    currency: 'EUR',
  }).format(price);
};
---

<nav class="navbar bg-base-100 shadow-sm">
  <!-- Logo / Nom du restaurant -->
  <div class="flex-1">
    <a href="/menu" class="btn btn-ghost text-xl">
      {displayName}
    </a>
  </div>

  <!-- Actions √† droite -->
  <div class="flex-none gap-2">
    
    <!-- üõí Panier -->
    {showCart && (
      <a href="/cart" class="btn btn-ghost btn-circle">
        <div class="indicator">
          <svg 
            xmlns="http://www.w3.org/2000/svg" 
            class="h-5 w-5" 
            fill="none" 
            viewBox="0 0 24 24" 
            stroke="currentColor"
          >
            <path 
              stroke-linecap="round" 
              stroke-linejoin="round" 
              stroke-width="2" 
              d="M3 3h2l.4 2M7 13h10l4-8H5.4M7 13L5.4 5M7 13l-2.293 2.293c-.63.63-.184 1.707.707 1.707H17m0 0a2 2 0 100 4 2 2 0 000-4zm-8 2a2 2 0 11-4 0 2 2 0 014 0z" 
            />
          </svg>
          <span id="cart-badge" class="badge badge-sm indicator-item badge-primary" style="display: none;">
            0
          </span>
        </div>
      </a>
    )}

    <!-- üë§ Profil Utilisateur -->
    {showProfile && (
      <div class="dropdown dropdown-end">
        <div tabindex="0" role="button" class="btn btn-ghost btn-circle avatar">
          <div class="w-10 rounded-full">
            <img
              alt={userName}
              src={userAvatar}
            />
          </div>
        </div>
        
        <!-- Dropdown Menu -->
        <ul
          tabindex="0"
          class="menu menu-sm dropdown-content bg-base-100 rounded-box z-[1] mt-3 w-52 p-2 shadow-lg">
          <li><a href="/status">Suivre commande</a></li>
          <li><a href="/contact">Contact</a></li>
        </ul>
      </div>
    )}
  </div>
</nav>

<style>
  /* Animation pour le badge du panier */
  .indicator-item {
    animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
  }

  @keyframes pulse {
    0%, 100% {
      opacity: 1;
    }
    50% {
      opacity: 0.8;
      transform: scale(1.05);
    }
  }

  /* Am√©lioration du dropdown */
  .dropdown-content {
    animation: slideDown 0.2s ease-out;
  }

  @keyframes slideDown {
    from {
      opacity: 0;
      transform: translateY(-10px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  /* Hover effect sur le logo */
  .navbar .btn-ghost:hover {
    background-color: transparent;
    transform: scale(1.05);
    transition: transform 0.2s ease;
  }
</style>

<script>
  // üéØ Mise √† jour du badge panier
  function updateCartBadge() {
    const cart = JSON.parse(localStorage.getItem('cart') || '[]');
    const totalItems = cart.reduce((sum: number, item: any) => sum + item.quantite, 0);
    
    const badge = document.getElementById('cart-badge');
    if (badge) {
      badge.textContent = totalItems.toString();
      badge.style.display = totalItems > 0 ? 'inline-flex' : 'none';
    }
  }

  // Mettre √† jour au chargement
  if (typeof window !== 'undefined') {
    // Au chargement initial
    if (document.readyState === 'loading') {
      document.addEventListener('DOMContentLoaded', updateCartBadge);
    } else {
      updateCartBadge();
    }
    
    // Quand le panier change
    window.addEventListener('cart-updated', updateCartBadge);
    window.addEventListener('storage', updateCartBadge);
    
    // Support Astro View Transitions
    document.addEventListener('astro:page-load', updateCartBadge);
  }
</script>