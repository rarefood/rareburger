---
// src/pages/admin/commandes/edit.astro
import AdminLayout from '../../../layouts/AdminLayout.astro';

export const prerender = false;

const RESTAURANT_ID = import.meta.env.PUBLIC_DEFAULT_RESTAURANT_ID || 'rare-burger';
const commandeId = Astro.url.searchParams.get('id');

if (!commandeId) {
  return Astro.redirect('/admin/commandes');
}
---

<AdminLayout title="Modifier commande">
  
  <div class="mb-6">
    <div class="flex items-center gap-4">
      <a href="/admin/commandes" class="btn btn-ghost btn-sm">
        ← Retour
      </a>
      <div>
        <h1 class="text-3xl font-bold">Modifier la commande</h1>
        <p class="text-base-content/60" id="commandeNumero">Chargement...</p>
      </div>
    </div>
  </div>

  <!-- Loader -->
  <div id="loader" class="flex justify-center py-20">
    <span class="loading loading-spinner loading-lg"></span>
  </div>

  <!-- Erreur -->
  <div id="errorState" class="hidden">
    <div class="alert alert-error">
      <span>Commande introuvable</span>
    </div>
  </div>

  <!-- Formulaire -->
  <div id="editForm" class="hidden">
    
    <div class="grid grid-cols-1 lg:grid-cols-3 gap-6">
      
      <!-- Colonne principale -->
      <div class="lg:col-span-2 space-y-6">
        
        <!-- Informations client -->
        <div class="card bg-base-100 shadow-lg">
          <div class="card-body">
            <h2 class="card-title">Informations client</h2>
            
            <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
              <div class="form-control">
                <label class="label">
                  <span class="label-text">Nom</span>
                </label>
                <input type="text" id="clientNom" class="input input-bordered" />
              </div>

              <div class="form-control">
                <label class="label">
                  <span class="label-text">Prénom</span>
                </label>
                <input type="text" id="clientPrenom" class="input input-bordered" />
              </div>

              <div class="form-control">
                <label class="label">
                  <span class="label-text">Email</span>
                </label>
                <input type="email" id="clientEmail" class="input input-bordered" />
              </div>

              <div class="form-control">
                <label class="label">
                  <span class="label-text">Téléphone</span>
                </label>
                <input type="tel" id="clientTelephone" class="input input-bordered" />
              </div>
            </div>

            <!-- Adresse (si livraison) -->
            <div id="adresseSection" class="hidden">
              <div class="divider">Adresse de livraison</div>
              
              <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                <div class="form-control md:col-span-2">
                  <label class="label">
                    <span class="label-text">Rue</span>
                  </label>
                  <input type="text" id="adresseRue" class="input input-bordered" />
                </div>

                <div class="form-control">
                  <label class="label">
                    <span class="label-text">Numéro</span>
                  </label>
                  <input type="text" id="adresseNumero" class="input input-bordered" />
                </div>

                <div class="form-control">
                  <label class="label">
                    <span class="label-text">Code postal</span>
                  </label>
                  <input type="text" id="adresseCodePostal" class="input input-bordered" />
                </div>

                <div class="form-control md:col-span-2">
                  <label class="label">
                    <span class="label-text">Ville</span>
                  </label>
                  <input type="text" id="adresseVille" class="input input-bordered" />
                </div>
              </div>
            </div>

          </div>
        </div>

        <!-- Articles -->
        <div class="card bg-base-100 shadow-lg">
          <div class="card-body">
            <h2 class="card-title">Articles commandés</h2>
            
            <div class="overflow-x-auto">
              <table class="table table-zebra">
                <thead>
                  <tr>
                    <th>Produit</th>
                    <th>Quantité</th>
                    <th>Prix unitaire</th>
                    <th>Total</th>
                  </tr>
                </thead>
                <tbody id="articlesTable">
                </tbody>
              </table>
            </div>

            <div class="flex justify-end mt-4">
              <div class="text-right">
                <div class="text-sm text-base-content/60">Sous-total: <span id="sousTotal" class="font-bold">0 €</span></div>
                <div class="text-sm text-base-content/60" id="fraisLivraisonRow">Frais de livraison: <span id="fraisLivraison" class="font-bold">0 €</span></div>
                <div class="text-lg font-bold">Total: <span id="prixTotal">0 €</span></div>
              </div>
            </div>

          </div>
        </div>

        <!-- Notes -->
        <div class="card bg-base-100 shadow-lg">
          <div class="card-body">
            <h2 class="card-title">Notes / Instructions</h2>
            <textarea id="notes" class="textarea textarea-bordered h-24" placeholder="Instructions spéciales..."></textarea>
          </div>
        </div>

      </div>

      <!-- Sidebar -->
      <div class="space-y-6">
        
        <!-- Statut -->
        <div class="card bg-base-100 shadow-lg">
          <div class="card-body">
            <h2 class="card-title">Statut</h2>
            
            <div class="form-control">
              <select id="statut" class="select select-bordered">
                <option value="nouvelle">Nouvelle</option>
                <option value="en_preparation">En préparation</option>
                <option value="prete">Prête</option>
                <option value="en_livraison">En livraison</option>
                <option value="livree">Livrée</option>
                <option value="terminee">Terminée</option>
                <option value="annulee">Annulée</option>
              </select>
            </div>

            <div class="divider"></div>

            <div class="space-y-2 text-sm">
              <div class="flex justify-between">
                <span class="text-base-content/60">Type:</span>
                <span id="typeCommande" class="font-bold">-</span>
              </div>
              <div class="flex justify-between">
                <span class="text-base-content/60">Date création:</span>
                <span id="dateCreation" class="font-bold">-</span>
              </div>
              <div class="flex justify-between">
                <span class="text-base-content/60">Numéro:</span>
                <span id="numeroCommande" class="font-mono font-bold">-</span>
              </div>
            </div>

          </div>
        </div>

        <!-- Paiement -->
        <div class="card bg-base-100 shadow-lg">
          <div class="card-body">
            <h2 class="card-title">Paiement</h2>
            
            <div class="form-control">
              <label class="label">
                <span class="label-text">Mode</span>
              </label>
              <select id="paiementMode" class="select select-bordered select-sm">
                <option value="reception">À la réception</option>
                <option value="comptoir">Au comptoir</option>
                <option value="en_ligne">En ligne</option>
              </select>
            </div>

            <div class="form-control">
              <label class="label">
                <span class="label-text">Statut</span>
              </label>
              <select id="paiementStatut" class="select select-bordered select-sm">
                <option value="a_reception">À la réception</option>
                <option value="en_attente">En attente</option>
                <option value="paye">Payé</option>
              </select>
            </div>

          </div>
        </div>

        <!-- Actions -->
        <div class="card bg-base-100 shadow-lg">
          <div class="card-body">
            <button class="btn btn-primary btn-block" id="saveBtn">
              <span id="saveBtnText">Enregistrer</span>
              <span id="saveBtnLoader" class="loading loading-spinner loading-sm hidden"></span>
            </button>
            
            <button class="btn btn-ghost btn-block" id="printBtn">
              Imprimer le ticket
            </button>

            <div class="divider"></div>

            <button class="btn btn-error btn-outline btn-block" id="deleteBtn">
              Supprimer la commande
            </button>
          </div>
        </div>

      </div>

    </div>

  </div>

</AdminLayout>

<script define:vars={{ RESTAURANT_ID, commandeId }}>
  let commande = null;

  const formatPrice = (price) => {
    return new Intl.NumberFormat('fr-BE', {
      style: 'currency',
      currency: 'EUR'
    }).format(price);
  };

  const formatDate = (dateStr) => {
    const date = new Date(dateStr);
    return new Intl.DateTimeFormat('fr-BE', {
      day: '2-digit',
      month: '2-digit',
      year: 'numeric',
      hour: '2-digit',
      minute: '2-digit'
    }).format(date);
  };

  async function loadCommande() {
    try {
      const response = await fetch(`https://api.cmdola.be/api/${RESTAURANT_ID}/commandes/${commandeId}`);
      
      if (!response.ok) {
        throw new Error('Commande introuvable');
      }

      commande = await response.json();
      populateForm();

      document.getElementById('loader').classList.add('hidden');
      document.getElementById('editForm').classList.remove('hidden');

    } catch (error) {
      console.error('Erreur chargement:', error);
      document.getElementById('loader').classList.add('hidden');
      document.getElementById('errorState').classList.remove('hidden');
    }
  }

  function populateForm() {
    document.getElementById('commandeNumero').textContent = `Commande ${commande.numero}`;
    document.getElementById('numeroCommande').textContent = commande.numero;
    document.getElementById('dateCreation').textContent = formatDate(commande.date_creation);
    document.getElementById('typeCommande').textContent = commande.type || 'N/A';

    document.getElementById('clientNom').value = commande.client?.nom || '';
    document.getElementById('clientPrenom').value = commande.client?.prenom || '';
    document.getElementById('clientEmail').value = commande.client?.email || '';
    document.getElementById('clientTelephone').value = commande.client?.telephone || '';

    if (commande.type === 'livraison' && commande.client?.adresse) {
      document.getElementById('adresseSection').classList.remove('hidden');
      document.getElementById('adresseRue').value = commande.client.adresse.rue || '';
      document.getElementById('adresseNumero').value = commande.client.adresse.numero || '';
      document.getElementById('adresseCodePostal').value = commande.client.adresse.code_postal || '';
      document.getElementById('adresseVille').value = commande.client.adresse.ville || '';
    }

    const articlesTable = document.getElementById('articlesTable');
    articlesTable.innerHTML = commande.articles.map(article => `
      <tr>
        <td>
          <div class="font-bold">${article.nom}</div>
          ${article.supplements?.length ? `<div class="text-xs text-base-content/60">+ ${article.supplements.map(s => s.name).join(', ')}</div>` : ''}
        </td>
        <td>${article.quantite}</td>
        <td>${formatPrice(article.prix)}</td>
        <td class="font-bold">${formatPrice(article.prix * article.quantite)}</td>
      </tr>
    `).join('');

    document.getElementById('sousTotal').textContent = formatPrice(commande.sous_total || 0);
    
    if (commande.frais_livraison && commande.frais_livraison > 0) {
      document.getElementById('fraisLivraisonRow').classList.remove('hidden');
      document.getElementById('fraisLivraison').textContent = formatPrice(commande.frais_livraison);
    } else {
      document.getElementById('fraisLivraisonRow').classList.add('hidden');
    }

    document.getElementById('prixTotal').textContent = formatPrice(commande.prix_total);

    document.getElementById('statut').value = commande.statut;
    document.getElementById('notes').value = commande.notes || '';
    
    document.getElementById('paiementMode').value = commande.paiement?.mode || 'reception';
    document.getElementById('paiementStatut').value = commande.paiement?.statut || 'a_reception';
  }

  async function saveCommande() {
    const saveBtn = document.getElementById('saveBtn');
    const saveBtnText = document.getElementById('saveBtnText');
    const saveBtnLoader = document.getElementById('saveBtnLoader');

    saveBtn.disabled = true;
    saveBtnText.classList.add('hidden');
    saveBtnLoader.classList.remove('hidden');

    const updatedCommande = {
      ...commande,
      client: {
        ...commande.client,
        nom: document.getElementById('clientNom').value,
        prenom: document.getElementById('clientPrenom').value,
        email: document.getElementById('clientEmail').value,
        telephone: document.getElementById('clientTelephone').value,
      },
      statut: document.getElementById('statut').value,
      notes: document.getElementById('notes').value,
      paiement: {
        mode: document.getElementById('paiementMode').value,
        statut: document.getElementById('paiementStatut').value
      }
    };

    if (commande.type === 'livraison') {
      updatedCommande.client.adresse = {
        rue: document.getElementById('adresseRue').value,
        numero: document.getElementById('adresseNumero').value,
        code_postal: document.getElementById('adresseCodePostal').value,
        ville: document.getElementById('adresseVille').value
      };
    }

    try {
      const response = await fetch(`https://api.cmdola.be/api/${RESTAURANT_ID}/commandes/${commandeId}`, {
        method: 'PUT',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify(updatedCommande)
      });

      if (response.ok) {
        alert('Commande mise à jour avec succès');
        window.location.href = '/admin/commandes';
      } else {
        throw new Error('Erreur lors de la mise à jour');
      }
    } catch (error) {
      console.error('Erreur:', error);
      alert('Erreur lors de la mise à jour');
    } finally {
      saveBtn.disabled = false;
      saveBtnText.classList.remove('hidden');
      saveBtnLoader.classList.add('hidden');
    }
  }

  async function deleteCommande() {
    if (!confirm('Êtes-vous sûr de vouloir supprimer cette commande ?')) return;

    try {
      await fetch(`https://api.cmdola.be/api/${RESTAURANT_ID}/commandes/${commandeId}`, {
        method: 'DELETE'
      });
      alert('Commande supprimée');
      window.location.href = '/admin/commandes';
    } catch (error) {
      console.error('Erreur suppression:', error);
      alert('Erreur lors de la suppression');
    }
  }

  async function printCommande() {
    try {
      await fetch(`https://api.cmdola.be/api/${RESTAURANT_ID}/commandes/${commandeId}/print`, {
        method: 'POST'
      });
      alert('Commande envoyée à l\'imprimante');
    } catch (error) {
      console.error('Erreur impression:', error);
      alert('Erreur lors de l\'impression');
    }
  }

  document.getElementById('saveBtn').addEventListener('click', saveCommande);
  document.getElementById('deleteBtn').addEventListener('click', deleteCommande);
  document.getElementById('printBtn').addEventListener('click', printCommande);

  loadCommande();
</script>