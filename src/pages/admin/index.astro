---
// src/pages/admin/index.astro
import AdminLayout from '../../layouts/AdminLayout.astro';

// IMPORTANT : Forcer SSR pour l'authentification
export const prerender = false;

// V√©rification auth c√¥t√© serveur
const user = Astro.locals.user;
if (!user || !user.roles.includes('admin')) {
  return Astro.redirect('/login');
}
---

<AdminLayout title="Dashboard">
  
  <!-- En-t√™te -->
  <div class="mb-6">
    <h1 class="text-3xl font-bold">Dashboard</h1>
    <p class="text-base-content/60">Vue d'ensemble de votre activit√©</p>
  </div>

  <!-- Loader initial -->
  <div id="loader" class="flex justify-center items-center py-20">
    <span class="loading loading-spinner loading-lg"></span>
  </div>

  <!-- Contenu (cach√© au d√©part) -->
  <div id="dashboardContent" class="hidden">

    <!-- Stats Cards -->
    <div class="stats stats-vertical lg:stats-horizontal shadow w-full mb-6">
      
      <div class="stat">
        <div class="stat-title">Commandes aujourd'hui</div>
        <div class="stat-value text-primary" id="todayOrders">0</div>
        <div class="stat-desc">Commandes re√ßues ce jour</div>
      </div>
      
      <div class="stat">
        <div class="stat-title">En attente</div>
        <div class="stat-value text-warning" id="pendingOrders">0</div>
        <div class="stat-desc">√Ä pr√©parer ou en cours</div>
      </div>
      
      <div class="stat">
        <div class="stat-title">CA aujourd'hui</div>
        <div class="stat-value text-success" id="todayRevenue">0 ‚Ç¨</div>
        <div class="stat-desc">Chiffre d'affaires du jour</div>
      </div>
      
      <div class="stat">
        <div class="stat-title">Panier moyen</div>
        <div class="stat-value" id="averageOrder">0 ‚Ç¨</div>
        <div class="stat-desc">Moyenne par commande</div>
      </div>
      
    </div>

    <!-- Grid responsive -->
    <div class="grid grid-cols-1 lg:grid-cols-2 gap-6">
      
      <!-- Commandes r√©centes -->
      <div class="card bg-base-100 shadow-lg">
        <div class="card-body">
          <h2 class="card-title">Commandes r√©centes</h2>
          
          <div class="overflow-x-auto">
            <table class="table table-zebra">
              <thead>
                <tr>
                  <th>Num√©ro</th>
                  <th>Client</th>
                  <th>Montant</th>
                  <th>Statut</th>
                </tr>
              </thead>
              <tbody id="recentOrdersTable">
                <tr>
                  <td colspan="4" class="text-center">
                    <span class="loading loading-spinner loading-sm"></span>
                  </td>
                </tr>
              </tbody>
            </table>
          </div>

          <div class="card-actions justify-end mt-4">
            <a href="/admin/commandes" class="btn btn-primary btn-sm">
              Voir toutes les commandes
            </a>
          </div>
        </div>
      </div>

      <!-- Top produits -->
      <div class="card bg-base-100 shadow-lg">
        <div class="card-body">
          <h2 class="card-title">Top produits</h2>
          
          <div id="topProductsList" class="space-y-3">
            <div class="text-center py-8">
              <span class="loading loading-spinner loading-md"></span>
            </div>
          </div>

          <div class="card-actions justify-end mt-4">
            <a href="/admin/menu" class="btn btn-primary btn-sm">
              G√©rer le menu
            </a>
          </div>
        </div>
      </div>

    </div>

    <!-- Actions rapides -->
    <div class="mt-6">
      <h2 class="text-xl font-bold mb-4">Actions rapides</h2>
      <div class="join join-vertical lg:join-horizontal w-full">
        <a href="/admin/commandes" class="btn btn-outline join-item flex-1">
          G√©rer les commandes
        </a>
        <a href="/admin/menu" class="btn btn-outline join-item flex-1">
          Modifier le menu
        </a>
        <a href="/admin/config" class="btn btn-outline join-item flex-1">
          Configuration
        </a>
      </div>
    </div>

  </div>

</AdminLayout>

<script>
// ==========================================
// üöÄ Imports
// ==========================================
import { api } from '../../lib/api';

// ==========================================
// Utilitaires
// ==========================================
function formatPrice(price) {
  return new Intl.NumberFormat('fr-BE', {
    style: 'currency',
    currency: 'EUR'
  }).format(price);
}

function getStatusBadge(statut) {
  const badges = {
    'nouvelle': 'badge-warning',
    'en_preparation': 'badge-info',
    'prete': 'badge-success',
    'en_livraison': 'badge-primary',
    'livree': 'badge-success',
    'terminee': 'badge-ghost',
    'annulee': 'badge-error'
  };
  return badges[statut] || 'badge-ghost';
}

function getStatusLabel(statut) {
  const labels = {
    'nouvelle': 'Nouvelle',
    'en_preparation': 'En pr√©paration',
    'prete': 'Pr√™te',
    'en_livraison': 'En livraison',
    'livree': 'Livr√©e',
    'terminee': 'Termin√©e',
    'annulee': 'Annul√©e'
  };
  return labels[statut] || statut;
}

// ==========================================
// Chargement Config & Th√®me
// ==========================================
async function loadConfig() {
  try {
    const config = await api.config.get();
    
    if (config.theme?.daisy) {
      document.documentElement.setAttribute('data-theme', config.theme.daisy);
    }
    
    if (config.theme?.logo) {
      const logoUrl = api.images.getUrl(config.theme.logo);
      const favicon = document.getElementById('favicon');
      if (favicon) favicon.href = logoUrl;
    }
  } catch (error) {
    console.error('‚ùå Erreur config:', error);
  }
}

// ==========================================
// Charger les donn√©es du dashboard
// ==========================================
async function loadDashboard() {
  try {
    console.log('üîÑ Chargement dashboard...');
    
    // ‚úÖ Charger stats via api.ts
    const stats = await api.stats.general();

    document.getElementById('todayOrders').textContent = stats.today_orders || 0;
    document.getElementById('pendingOrders').textContent = stats.pending_orders || 0;
    document.getElementById('todayRevenue').textContent = formatPrice(stats.today_revenue || 0);
    document.getElementById('averageOrder').textContent = formatPrice(stats.average_order || 0);

    // ‚úÖ Charger commandes via api.ts
    const commandesData = await api.commandes.list();
    const recentOrders = (commandesData.commandes || [])
      .sort((a, b) => new Date(b.date_creation) - new Date(a.date_creation))
      .slice(0, 5);

    const tableBody = document.getElementById('recentOrdersTable');
    
    if (recentOrders.length === 0) {
      tableBody.innerHTML = `
        <tr>
          <td colspan="4" class="text-center text-base-content/60">
            Aucune commande r√©cente
          </td>
        </tr>
      `;
    } else {
      tableBody.innerHTML = recentOrders.map(commande => `
        <tr>
          <td>
            <a href="/admin/commandes?id=${commande.id}" class="link link-primary">
              ${commande.numero}
            </a>
          </td>
          <td>${commande.client?.nom || 'N/A'}</td>
          <td>${formatPrice(commande.prix_total)}</td>
          <td>
            <span class="badge ${getStatusBadge(commande.statut)} badge-sm">
              ${getStatusLabel(commande.statut)}
            </span>
          </td>
        </tr>
      `).join('');
    }

    // Top produits
    const topProductsList = document.getElementById('topProductsList');
    if (stats.top_products && stats.top_products.length > 0) {
      topProductsList.innerHTML = stats.top_products.map(([nom, quantite], index) => `
        <div class="flex items-center justify-between">
          <div class="flex items-center gap-3">
            <div class="badge badge-primary badge-lg">${index + 1}</div>
            <span class="font-medium">${nom}</span>
          </div>
          <div class="badge badge-ghost">${quantite} vendus</div>
        </div>
      `).join('');
    } else {
      topProductsList.innerHTML = `
        <div class="text-center text-base-content/60 py-8">
          Aucune vente enregistr√©e
        </div>
      `;
    }

    console.log('‚úÖ Dashboard charg√©');

    // Masquer loader, afficher contenu
    document.getElementById('loader').classList.add('hidden');
    document.getElementById('dashboardContent').classList.remove('hidden');

  } catch (error) {
    console.error('‚ùå Erreur chargement dashboard:', error);
    
    // Gestion erreur auth
    if (error.message.includes('Token') || error.message.includes('401')) {
      alert('Session expir√©e, veuillez vous reconnecter');
      window.location.href = '/login';
      return;
    }
    
    document.getElementById('loader').innerHTML = `
      <div class="alert alert-error">
        <span>Erreur de chargement des donn√©es</span>
      </div>
    `;
  }
}

// ==========================================
// Initialisation
// ==========================================
console.log('üìä Dashboard Admin charg√©');

loadConfig();
loadDashboard();

// Auto-refresh toutes les 30 secondes
setInterval(() => loadDashboard(), 30000);
</script>