---
// src/pages/cuisine/archives.astro
// ============================================
// üì¶ CMDOLA - Archives Cuisine
// ============================================

import "../../assets/app.css";

export const prerender = false;

const user = Astro.locals.user;
if (!user) {
  return Astro.redirect('/login');
}

const token = Astro.cookies.get('admin_token')?.value;
if (!token) {
  return Astro.redirect('/login');
}
---

<!DOCTYPE html>
<html lang="fr">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta name="robots" content="noindex, nofollow" />
  <title>Archives - CMDOLA</title>
  <link rel="icon" type="image/png" href="/favicon.ico" id="favicon">
</head>

<body class="bg-base-200 min-h-screen">
  
  <!-- Header -->
  <div class="navbar bg-base-100 shadow-lg sticky top-0 z-50">
    <div class="flex-1">
      <a href="/cuisine" class="btn btn-ghost btn-circle">
        <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7" />
        </svg>
      </a>
      <img src="/favicon.ico" alt="Logo" class="w-12 h-12 rounded-lg mr-3 ml-2" id="navLogo" />
      <div>
        <h1 class="text-2xl font-bold" id="restaurantName">Archives</h1>
        <p class="text-sm text-base-content/60">Historique des commandes</p>
      </div>
    </div>
    
    <div class="flex-none gap-2">
      <!-- Stats -->
      <div class="stats shadow-lg">
        <div class="stat py-2 px-4">
          <div class="stat-title text-xs">Total</div>
          <div class="stat-value text-2xl" id="countTotal">0</div>
        </div>
        <div class="stat py-2 px-4">
          <div class="stat-title text-xs">Termin√©es</div>
          <div class="stat-value text-2xl text-success" id="countTerminees">0</div>
        </div>
        <div class="stat py-2 px-4">
          <div class="stat-title text-xs">Annul√©es</div>
          <div class="stat-value text-2xl text-error" id="countAnnulees">0</div>
        </div>
      </div>

      <!-- Indicateur refresh -->
      <div id="refreshIndicator" class="hidden">
        <span class="loading loading-spinner loading-md"></span>
      </div>

      <!-- Retour -->
      <a href="/cuisine" class="btn btn-primary btn-circle" title="Retour">
        üè†
      </a>
    </div>
  </div>

  <!-- Filtres -->
  <div class="container mx-auto px-4 py-4">
    <div class="card bg-base-100 shadow-sm">
      <div class="card-body p-4">
        <div class="grid md:grid-cols-2 gap-4">
          
          <!-- Filtre p√©riode -->
          <div class="form-control">
            <label class="label">
              <span class="label-text font-semibold">P√©riode</span>
            </label>
            <select id="filterPeriod" class="select select-bordered">
              <option value="today">Aujourd'hui</option>
              <option value="week">Cette semaine</option>
              <option value="month">Ce mois</option>
              <option value="all" selected>Tout l'historique</option>
            </select>
          </div>

          <!-- Filtre statut -->
          <div class="form-control">
            <label class="label">
              <span class="label-text font-semibold">Statut</span>
            </label>
            <select id="filterStatut" class="select select-bordered">
              <option value="all" selected>Tous</option>
              <option value="terminee">Termin√©es</option>
              <option value="annulee">Annul√©es</option>
            </select>
          </div>

        </div>
      </div>
    </div>
  </div>

  <!-- Liste des commandes -->
  <div class="container mx-auto px-4 pb-8">
    
    <!-- √âtat vide -->
    <div id="emptyState" class="hidden">
      <div class="card bg-base-100 shadow-sm">
        <div class="card-body text-center py-12">
          <div class="text-6xl mb-4">üì¶</div>
          <h3 class="text-2xl font-bold mb-2">Aucune archive</h3>
          <p class="text-base-content/60">Aucune commande ne correspond aux filtres s√©lectionn√©s</p>
        </div>
      </div>
    </div>

    <!-- Liste -->
    <div id="archivesList" class="space-y-4">
      <!-- Rempli par JS -->
    </div>

  </div>

  <!-- Modal d√©tail commande -->
  <dialog id="detailModal" class="modal">
    <div class="modal-box max-w-4xl">
      <form method="dialog">
        <button class="btn btn-sm btn-circle btn-ghost absolute right-2 top-2">‚úï</button>
      </form>
      
      <!-- Header modal -->
      <div class="flex justify-between items-start mb-6">
        <div>
          <h3 class="font-bold text-3xl mb-2" id="modalNumero">Commande</h3>
          <div class="flex gap-2">
            <span class="badge badge-lg" id="modalType">Type</span>
            <span class="badge badge-lg" id="modalStatut">Statut</span>
          </div>
        </div>
        <div class="text-right">
          <div class="text-sm text-base-content/60">Client</div>
          <div class="font-bold text-xl" id="modalClient">Client</div>
          <div class="text-sm" id="modalTelephone">Tel</div>
        </div>
      </div>

      <!-- Date -->
      <div class="alert mb-4">
        <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z" />
        </svg>
        <div>
          <div class="font-bold">Date de commande</div>
          <div id="modalDate"></div>
        </div>
      </div>

      <!-- Adresse si livraison -->
      <div id="modalAdresse" class="alert alert-info mb-4 hidden">
        <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z" />
        </svg>
        <div>
          <div class="font-bold">Adresse de livraison</div>
          <div id="modalAdresseTexte"></div>
        </div>
      </div>

      <!-- Table si sur place -->
      <div id="modalTable" class="alert mb-4 hidden">
        <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6" />
        </svg>
        <div>
          <span class="font-bold">Table:</span>
          <span id="modalTableNumero"></span>
        </div>
      </div>

      <div class="divider">Articles</div>

      <!-- Liste articles -->
      <div class="space-y-3 mb-6" id="modalArticles">
        <!-- Rempli par JS -->
      </div>

      <!-- Notes -->
      <div id="modalNotes" class="alert alert-warning mb-6 hidden">
        <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 8h10M7 12h4m1 8l-4-4H5a2 2 0 01-2-2V6a2 2 0 012-2h14a2 2 0 012 2v8a2 2 0 01-2 2h-3l-4 4z" />
        </svg>
        <div>
          <div class="font-bold">Instructions</div>
          <div id="modalNotesTexte"></div>
        </div>
      </div>

      <div class="divider"></div>

      <!-- Totaux -->
      <div class="card bg-base-200">
        <div class="card-body p-4">
          <div class="space-y-2">
            <div class="flex justify-between">
              <span>Sous-total</span>
              <span id="modalSousTotal" class="font-semibold">0.00‚Ç¨</span>
            </div>
            <div id="modalDeliveryRow" class="flex justify-between" style="display: none;">
              <span>Frais de livraison</span>
              <span id="modalDeliveryFees" class="font-semibold">0.00‚Ç¨</span>
            </div>
            <div class="divider my-2"></div>
            <div class="flex justify-between text-lg">
              <span class="font-bold">Total</span>
              <span id="modalTotal" class="font-bold text-primary">0.00‚Ç¨</span>
            </div>
          </div>
        </div>
      </div>

    </div>
    <form method="dialog" class="modal-backdrop">
      <button>close</button>
    </form>
  </dialog>

</body>
</html>

<script>
// ==========================================
// üöÄ Imports
// ==========================================
import { api } from '../../lib/api';

// ==========================================
// Variables Globales
// ==========================================
let allCommandes = [];
let currentPeriod = 'all';
let currentStatut = 'all';
let currentCommandeId = null;

// ==========================================
// Chargement Config & Th√®me
// ==========================================
async function loadConfig() {
  try {
    const config = await api.config.get();
    
    if (config.theme?.daisy) {
      document.documentElement.setAttribute('data-theme', config.theme.daisy);
    }
    
    if (config.theme?.logo) {
      const logoUrl = api.images.getUrl(config.theme.logo);
      const favicon = document.getElementById('favicon');
      const navLogo = document.getElementById('navLogo');
      if (favicon) favicon.href = logoUrl;
      if (navLogo) navLogo.src = logoUrl;
    }

    if (config.nom) {
      const nameEl = document.getElementById('restaurantName');
      if (nameEl) nameEl.textContent = `Archives - ${config.nom}`;
    }
  } catch (error) {
    console.error('‚ùå Erreur config:', error);
  }
}

// ==========================================
// Utilitaires
// ==========================================
function formatPrice(price) {
  return new Intl.NumberFormat('fr-BE', {
    style: 'currency',
    currency: 'EUR'
  }).format(price);
}

function formatDate(isoDate) {
  try {
    const date = new Date(isoDate);
    return new Intl.DateTimeFormat('fr-BE', {
      day: 'numeric',
      month: 'long',
      year: 'numeric',
      hour: '2-digit',
      minute: '2-digit',
    }).format(date);
  } catch {
    return isoDate;
  }
}

function formatDateShort(isoDate) {
  try {
    const date = new Date(isoDate);
    return new Intl.DateTimeFormat('fr-BE', {
      day: '2-digit',
      month: '2-digit',
      year: 'numeric',
      hour: '2-digit',
      minute: '2-digit',
    }).format(date);
  } catch {
    return isoDate;
  }
}

function getTypeInfo(type) {
  const types = {
    'sur_place': { icon: 'üçΩÔ∏è', badge: 'badge-success', label: 'Sur place' },
    'emporter': { icon: 'ü•°', badge: 'badge-info', label: '√Ä emporter' },
    'livraison': { icon: 'üöö', badge: 'badge-primary', label: 'Livraison' }
  };
  return types[type] || { icon: 'üì¶', badge: 'badge-ghost', label: type };
}

function getStatutInfo(statut) {
  const statuts = {
    'terminee': { label: 'Termin√©e', badge: 'badge-success', icon: '‚úÖ' },
    'annulee': { label: 'Annul√©e', badge: 'badge-error', icon: '‚ùå' }
  };
  return statuts[statut] || { label: statut, badge: 'badge-ghost', icon: '‚ùì' };
}

// ==========================================
// Chargement Archives
// ==========================================
async function loadArchives() {
  document.getElementById('refreshIndicator').classList.remove('hidden');

  try {
    console.log(`üîÑ Chargement archives: period=${currentPeriod}, statut=${currentStatut}`);
    
    // ‚úÖ Utilise api.ts
    const data = await api.commandes.listArchives(currentPeriod, currentStatut);
    
    allCommandes = data.commandes || [];

    console.log(`‚úÖ ${allCommandes.length} commandes archiv√©es charg√©es`);

    updateStats();
    renderList();

  } catch (error) {
    console.error('‚ùå Erreur chargement archives:', error);
    
    if (error.message.includes('Token') || error.message.includes('401')) {
      alert('Session expir√©e, veuillez vous reconnecter');
      window.location.href = '/login';
    }
  } finally {
    setTimeout(() => {
      document.getElementById('refreshIndicator').classList.add('hidden');
    }, 500);
  }
}

// ==========================================
// Mise √† Jour Stats
// ==========================================
function updateStats() {
  const total = allCommandes.length;
  const terminees = allCommandes.filter(c => c.statut === 'terminee').length;
  const annulees = allCommandes.filter(c => c.statut === 'annulee').length;

  document.getElementById('countTotal').textContent = total;
  document.getElementById('countTerminees').textContent = terminees;
  document.getElementById('countAnnulees').textContent = annulees;
}

// ==========================================
// Affichage Liste
// ==========================================
function renderList() {
  const container = document.getElementById('archivesList');
  const emptyState = document.getElementById('emptyState');

  if (allCommandes.length === 0) {
    container.innerHTML = '';
    emptyState.classList.remove('hidden');
    return;
  }

  emptyState.classList.add('hidden');

  container.innerHTML = allCommandes.map(cmd => {
    const typeInfo = getTypeInfo(cmd.type);
    const statutInfo = getStatutInfo(cmd.statut);
    const articleCount = cmd.articles.reduce((sum, a) => sum + a.quantite, 0);

    return `
      <div class="card bg-base-100 shadow-sm hover:shadow-lg cursor-pointer transition-all" 
           onclick="openDetailModal('${cmd.id}')">
        <div class="card-body p-4">
          
          <div class="flex justify-between items-start">
            
            <!-- Info principale -->
            <div class="flex-1">
              <div class="flex items-center gap-2 mb-2">
                <h3 class="text-xl font-bold font-mono">#${cmd.numero}</h3>
                <span class="badge ${typeInfo.badge} badge-sm">
                  ${typeInfo.icon} ${typeInfo.label}
                </span>
                <span class="badge ${statutInfo.badge} badge-sm">
                  ${statutInfo.icon} ${statutInfo.label}
                </span>
              </div>
              
              <div class="text-sm text-base-content/70">
                <div class="font-semibold">${cmd.client?.prenom || ''} ${cmd.client?.nom || 'Client'}</div>
                <div>${formatDateShort(cmd.date_creation)}</div>
              </div>
            </div>

            <!-- R√©sum√© -->
            <div class="text-right">
              <div class="text-sm text-base-content/60">${articleCount} article${articleCount > 1 ? 's' : ''}</div>
              <div class="text-2xl font-bold text-primary">${formatPrice(cmd.prix_total)}</div>
            </div>

          </div>

        </div>
      </div>
    `;
  }).join('');
}

// ==========================================
// Modal D√©tail
// ==========================================
window.openDetailModal = function(commandeId) {
  const commande = allCommandes.find(c => c.id === commandeId);
  if (!commande) return;

  currentCommandeId = commandeId;

  const typeInfo = getTypeInfo(commande.type);
  const statutInfo = getStatutInfo(commande.statut);

  document.getElementById('modalNumero').textContent = `#${commande.numero}`;
  
  document.getElementById('modalType').textContent = `${typeInfo.icon} ${typeInfo.label}`;
  document.getElementById('modalType').className = `badge badge-lg ${typeInfo.badge}`;
  
  document.getElementById('modalStatut').textContent = `${statutInfo.icon} ${statutInfo.label}`;
  document.getElementById('modalStatut').className = `badge badge-lg ${statutInfo.badge}`;

  document.getElementById('modalClient').textContent = `${commande.client?.prenom || ''} ${commande.client?.nom || 'Client'}`;
  document.getElementById('modalTelephone').textContent = commande.client?.telephone || '';
  document.getElementById('modalDate').textContent = formatDate(commande.date_creation);

  // Adresse si livraison
  const modalAdresse = document.getElementById('modalAdresse');
  if (commande.type === 'livraison' && commande.client?.adresse) {
    const addr = commande.client.adresse;
    document.getElementById('modalAdresseTexte').textContent = 
      `${addr.rue} ${addr.numero}, ${addr.code_postal} ${addr.ville}`;
    modalAdresse.classList.remove('hidden');
  } else {
    modalAdresse.classList.add('hidden');
  }

  // Table si sur place
  const modalTable = document.getElementById('modalTable');
  if (commande.numero_table) {
    document.getElementById('modalTableNumero').textContent = commande.numero_table;
    modalTable.classList.remove('hidden');
  } else {
    modalTable.classList.add('hidden');
  }

  // Articles
  const articlesHtml = commande.articles.map(article => `
    <div class="card bg-base-200">
      <div class="card-body p-4">
        <div class="flex justify-between items-start">
          <div class="flex-1">
            <div class="flex items-center gap-2">
              <span class="badge badge-lg badge-primary">${article.quantite}x</span>
              <span class="font-bold text-lg">${article.nom}</span>
            </div>
            ${article.supplements && article.supplements.length > 0 ? `
              <div class="text-sm text-success mt-2">
                + ${article.supplements.map(s => s.name).join(', ')}
              </div>
            ` : ''}
            ${article.removed_ingredients && article.removed_ingredients.length > 0 ? `
              <div class="text-sm text-error mt-1">
                Sans: ${article.removed_ingredients.join(', ')}
              </div>
            ` : ''}
          </div>
          <span class="font-bold text-xl">${formatPrice(article.prix * article.quantite)}</span>
        </div>
      </div>
    </div>
  `).join('');
  document.getElementById('modalArticles').innerHTML = articlesHtml;

  // Notes
  const modalNotes = document.getElementById('modalNotes');
  if (commande.notes) {
    document.getElementById('modalNotesTexte').textContent = commande.notes;
    modalNotes.classList.remove('hidden');
  } else {
    modalNotes.classList.add('hidden');
  }

  // Prix
  document.getElementById('modalSousTotal').textContent = formatPrice(commande.sous_total);
  document.getElementById('modalTotal').textContent = formatPrice(commande.prix_total);
  
  if (commande.frais_livraison && commande.frais_livraison > 0) {
    document.getElementById('modalDeliveryRow').style.display = 'flex';
    document.getElementById('modalDeliveryFees').textContent = formatPrice(commande.frais_livraison);
  } else {
    document.getElementById('modalDeliveryRow').style.display = 'none';
  }

  detailModal.showModal();
};

// ==========================================
// Filtres
// ==========================================
document.getElementById('filterPeriod').addEventListener('change', (e) => {
  currentPeriod = e.target.value;
  loadArchives();
});

document.getElementById('filterStatut').addEventListener('change', (e) => {
  currentStatut = e.target.value;
  loadArchives();
});

// ==========================================
// Initialisation
// ==========================================
console.log('üì¶ Archives Cuisine charg√©es');

loadConfig();
loadArchives();
</script>