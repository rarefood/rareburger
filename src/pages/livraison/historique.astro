---
// src/pages/livraison/historique.astro
import "../../assets/app.css";

export const prerender = false;

const RESTAURANT_ID = import.meta.env.PUBLIC_DEFAULT_RESTAURANT_ID || 'rare-burger';

// V√©rification auth livreur
const token = Astro.cookies.get('livreur_token')?.value;
if (!token) {
  return Astro.redirect('/livraison/login');
}
---

<!DOCTYPE html>
<html lang="fr" data-theme="autumn">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no">
  <meta name="robots" content="noindex, nofollow">
  <meta name="theme-color" content="#1e293b">
  <meta name="apple-mobile-web-app-capable" content="yes">
  <meta name="apple-mobile-web-app-status-bar-style" content="black-translucent">
  <title>Historique - Livraisons</title>
  <link rel="icon" type="image/png" href="/favicon.ico" id="favicon">
  <link rel="manifest" href="/manifest.json">
  <style>
    body {
      padding-bottom: 80px;
    }

    .bottom-nav {
      position: fixed;
      bottom: 0;
      left: 0;
      right: 0;
      background: var(--fallback-b1, oklch(var(--b1)));
      border-top: 1px solid var(--fallback-bc, oklch(var(--bc)/0.2));
      z-index: 1000;
    }
  </style>
</head>

<body class="bg-base-200">
  
  <!-- Header -->
  <div class="navbar bg-base-100 shadow-lg sticky top-0 z-50">
    <div class="flex-1">
      <a href="/livraison" class="btn btn-ghost btn-lg">
        <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 19l-7-7m0 0l7-7m-7 7h18" />
        </svg>
      </a>
      <div>
        <h1 class="text-2xl font-bold">Mon historique</h1>
        <p class="text-sm text-base-content/60" id="livreurName">Livreur</p>
      </div>
    </div>
  </div>

  <!-- Stats -->
  <div class="px-4 py-4">
    <div class="stats stats-vertical lg:stats-horizontal shadow-lg w-full">
      <div class="stat py-3 px-4">
        <div class="stat-title">Aujourd'hui</div>
        <div class="stat-value text-success" id="statAujourdhui">0</div>
        <div class="stat-desc">livraisons</div>
      </div>
      <div class="stat py-3 px-4">
        <div class="stat-title">Cette semaine</div>
        <div class="stat-value text-info" id="statSemaine">0</div>
        <div class="stat-desc">livraisons</div>
      </div>
      <div class="stat py-3 px-4">
        <div class="stat-title">Total</div>
        <div class="stat-value text-primary" id="statTotal">0</div>
        <div class="stat-desc">historique complet</div>
      </div>
    </div>
  </div>

  <!-- Filtres -->
  <div class="px-4 mb-4">
    <div class="card bg-base-100 shadow-lg">
      <div class="card-body p-4">
        
        <!-- Recherche -->
        <div class="form-control mb-3">
          <input 
            type="text" 
            id="searchInput" 
            placeholder="Rechercher par num√©ro, client..." 
            class="input input-bordered input-lg"
          />
        </div>

        <!-- Filtres p√©riode -->
        <div class="grid grid-cols-2 gap-3">
          <div class="form-control">
            <select id="filterPeriode" class="select select-bordered select-lg">
              <option value="today">Aujourd'hui</option>
              <option value="week">Cette semaine</option>
              <option value="month">Ce mois</option>
              <option value="all">Tout</option>
            </select>
          </div>

          <div class="form-control">
            <select id="filterTri" class="select select-bordered select-lg">
              <option value="recent">Plus r√©centes</option>
              <option value="oldest">Plus anciennes</option>
            </select>
          </div>
        </div>

        <div class="flex justify-between items-center mt-3">
          <div class="text-sm text-base-content/60">
            <span id="displayCount">0</span> r√©sultat(s)
          </div>
          <button class="btn btn-ghost btn-sm" id="resetFilters">
            R√©initialiser
          </button>
        </div>

      </div>
    </div>
  </div>

  <!-- Loader -->
  <div id="loader" class="flex justify-center py-20">
    <span class="loading loading-spinner loading-lg"></span>
  </div>

  <!-- Liste historique -->
  <div id="historiqueList" class="px-4 space-y-3 pb-4 hidden">
    <!-- Rempli par JS -->
  </div>

  <!-- Empty state -->
  <div id="emptyState" class="hidden text-center py-20 px-4">
    <div class="text-6xl mb-4">üì¶</div>
    <h3 class="text-2xl font-bold mb-2">Aucune livraison</h3>
    <p class="text-base-content/60">Vous n'avez pas encore effectu√© de livraison</p>
  </div>

  <!-- Bottom Navigation -->
  <div class="bottom-nav">
    <div class="flex justify-around py-3">
      <a href="/livraison" class="btn btn-ghost flex-col gap-1 flex-1">
        <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6" />
        </svg>
        <span class="text-xs">Accueil</span>
      </a>
      <a href="/livraison/historique" class="btn btn-ghost flex-col gap-1 flex-1 btn-active">
        <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z" />
        </svg>
        <span class="text-xs">Historique</span>
      </a>
      <a href="/livraison/logout" class="btn btn-ghost flex-col gap-1 flex-1 text-error">
        <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1" />
        </svg>
        <span class="text-xs">D√©co</span>
      </a>
    </div>
  </div>

  <!-- Modal d√©tail -->
  <dialog id="detailModal" class="modal">
    <div class="modal-box max-w-lg">
      <form method="dialog">
        <button class="btn btn-sm btn-circle btn-ghost absolute right-2 top-2">‚úï</button>
      </form>
      
      <!-- Header -->
      <div class="text-center mb-6">
        <h3 class="font-bold text-3xl mb-2" id="modalNumero">#COMMANDE</h3>
        <div class="flex justify-center gap-2">
          <span class="badge badge-lg badge-success">Livr√©e</span>
          <span class="badge badge-lg badge-ghost" id="modalDate">Date</span>
        </div>
      </div>

      <!-- Client -->
      <div class="alert mb-4">
        <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z" />
        </svg>
        <div>
          <div class="font-bold text-lg" id="modalClient">Client</div>
          <div class="text-sm" id="modalTelephone">T√©l√©phone</div>
        </div>
      </div>

      <!-- Adresse -->
      <div class="alert alert-info mb-4">
        <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z" />
        </svg>
        <div>
          <div class="font-bold">Adresse</div>
          <div id="modalAdresse" class="text-sm">Adresse</div>
        </div>
      </div>

      <!-- Articles -->
      <div class="divider">Articles livr√©s</div>
      <div class="space-y-2 mb-4" id="modalArticles">
        <!-- Rempli par JS -->
      </div>

      <!-- Total -->
      <div class="flex justify-between items-center text-xl font-bold pt-4 border-t">
        <span>Total</span>
        <span id="modalTotal">0‚Ç¨</span>
      </div>

    </div>
    <form method="dialog" class="modal-backdrop">
      <button>close</button>
    </form>
  </dialog>

</body>
</html>

<script define:vars={{ RESTAURANT_ID }}>
  let allHistorique = [];
  let filteredHistorique = [];
  let currentPeriod = 'today';
  let currentSort = 'recent';
  let livreurInfo = null;
  let currentCommandeId = null;

  // Charger config
  async function loadConfig() {
    try {
      const response = await fetch(`https://api.rareburger.be/api/${RESTAURANT_ID}/config`);
      const config = await response.json();
      
      if (config.theme?.daisy) {
        document.documentElement.setAttribute('data-theme', config.theme.daisy);
      }
      
      if (config.theme?.logo) {
        const logoUrl = `https://api.rareburger.be/api/images/${RESTAURANT_ID}/${config.theme.logo}`;
        const favicon = document.getElementById('favicon');
        if (favicon) favicon.href = logoUrl;
      }

      // Info livreur
      const stored = localStorage.getItem('livreur_info');
      if (stored) {
        livreurInfo = JSON.parse(stored);
        const livreurNameEl = document.getElementById('livreurName');
        if (livreurNameEl) livreurNameEl.textContent = livreurInfo.nom || livreurInfo.username;
      }
    } catch (error) {
      console.error('Erreur config:', error);
    }
  }

  // Formater prix
  function formatPrice(price) {
    return new Intl.NumberFormat('fr-BE', {
      style: 'currency',
      currency: 'EUR'
    }).format(price);
  }

  // Formater date
  function formatDate(dateStr) {
    const date = new Date(dateStr);
    return new Intl.DateTimeFormat('fr-BE', {
      day: '2-digit',
      month: '2-digit',
      hour: '2-digit',
      minute: '2-digit'
    }).format(date);
  }

  // Charger historique
  async function loadHistorique() {
    try {
      const response = await fetch(`https://api.rareburger.be/api/${RESTAURANT_ID}/commandes`);
      const data = await response.json();
      
      // Filtrer: mes livraisons termin√©es
      allHistorique = (data.commandes || []).filter(cmd => 
        cmd.type === 'livraison' && 
        cmd.statut === 'livree' &&
        cmd.livreur_id === livreurInfo?.id
      );

      // Trier par date (plus r√©centes d'abord par d√©faut)
      allHistorique.sort((a, b) => new Date(b.date_creation) - new Date(a.date_creation));

      updateStats();
      applyFilters();

      document.getElementById('loader').classList.add('hidden');

    } catch (error) {
      console.error('Erreur chargement:', error);
      document.getElementById('loader').innerHTML = `
        <div class="alert alert-error">
          <span>Erreur de chargement</span>
        </div>
      `;
    }
  }

  // Stats
  function updateStats() {
    const now = new Date();
    
    // Aujourd'hui
    const today = new Date(now);
    today.setHours(0, 0, 0, 0);
    const aujourdhui = allHistorique.filter(c => new Date(c.date_creation) >= today).length;
    
    // Cette semaine
    const weekAgo = new Date(now.getTime() - 7 * 24 * 60 * 60 * 1000);
    const semaine = allHistorique.filter(c => new Date(c.date_creation) >= weekAgo).length;
    
    document.getElementById('statAujourdhui').textContent = aujourdhui;
    document.getElementById('statSemaine').textContent = semaine;
    document.getElementById('statTotal').textContent = allHistorique.length;
  }

  // Filtres
  function applyFilters() {
    const searchTerm = document.getElementById('searchInput').value.toLowerCase();
    const now = new Date();

    filteredHistorique = allHistorique.filter(cmd => {
      // Recherche
      if (searchTerm) {
        const matchNumero = cmd.numero.toLowerCase().includes(searchTerm);
        const matchClient = (cmd.client?.nom || '').toLowerCase().includes(searchTerm) ||
                           (cmd.client?.prenom || '').toLowerCase().includes(searchTerm);
        if (!matchNumero && !matchClient) return false;
      }

      // P√©riode
      const cmdDate = new Date(cmd.date_creation);
      
      if (currentPeriod === 'today') {
        const today = new Date(now);
        today.setHours(0, 0, 0, 0);
        if (cmdDate < today) return false;
      } else if (currentPeriod === 'week') {
        const weekAgo = new Date(now.getTime() - 7 * 24 * 60 * 60 * 1000);
        if (cmdDate < weekAgo) return false;
      } else if (currentPeriod === 'month') {
        const monthAgo = new Date(now.getTime() - 30 * 24 * 60 * 60 * 1000);
        if (cmdDate < monthAgo) return false;
      }

      return true;
    });

    // Tri
    if (currentSort === 'recent') {
      filteredHistorique.sort((a, b) => new Date(b.date_creation) - new Date(a.date_creation));
    } else {
      filteredHistorique.sort((a, b) => new Date(a.date_creation) - new Date(b.date_creation));
    }

    renderHistorique();
  }

  // Render
  function renderHistorique() {
    const container = document.getElementById('historiqueList');
    const emptyState = document.getElementById('emptyState');
    const displayCount = document.getElementById('displayCount');

    displayCount.textContent = filteredHistorique.length;

    if (filteredHistorique.length === 0) {
      container.classList.add('hidden');
      emptyState.classList.remove('hidden');
      return;
    }

    emptyState.classList.add('hidden');
    container.classList.remove('hidden');

    container.innerHTML = filteredHistorique.map(cmd => {
      const articleCount = cmd.articles.reduce((sum, a) => sum + a.quantite, 0);

      return `
        <div class="card bg-base-100 shadow-lg" onclick="openDetailModal('${cmd.id}')">
          <div class="card-body p-4">
            <div class="flex justify-between items-start">
              
              <div class="flex-1">
                <div class="text-xl font-bold mb-1">#${cmd.numero}</div>
                <div class="text-sm text-base-content/70">
                  ${cmd.client?.prenom || ''} ${cmd.client?.nom || 'Client'}
                </div>
                <div class="text-xs text-base-content/60 mt-1">
                  ${formatDate(cmd.date_creation)}
                </div>
              </div>

              <div class="text-right">
                <div class="badge badge-success mb-2">Livr√©e</div>
                <div class="text-lg font-bold">${formatPrice(cmd.prix_total)}</div>
                <div class="text-xs text-base-content/60">${articleCount} article${articleCount > 1 ? 's' : ''}</div>
              </div>

            </div>
          </div>
        </div>
      `;
    }).join('');
  }

  // Modal d√©tail
  window.openDetailModal = function(commandeId) {
    const commande = allHistorique.find(c => c.id === commandeId);
    if (!commande) return;

    currentCommandeId = commandeId;

    document.getElementById('modalNumero').textContent = `#${commande.numero}`;
    document.getElementById('modalDate').textContent = formatDate(commande.date_creation);
    
    document.getElementById('modalClient').textContent = 
      `${commande.client?.prenom || ''} ${commande.client?.nom || 'Client'}`;
    document.getElementById('modalTelephone').textContent = commande.client?.telephone || '';

    // Adresse
    if (commande.client?.adresse) {
      const addr = commande.client.adresse;
      document.getElementById('modalAdresse').textContent = 
        `${addr.rue} ${addr.numero}, ${addr.code_postal} ${addr.ville}`;
    }

    // Articles
    const articlesHtml = commande.articles.map(article => `
      <div class="flex justify-between items-center py-2 border-b">
        <div>
          <span class="badge badge-sm badge-primary">${article.quantite}x</span>
          <span class="font-semibold ml-2">${article.nom}</span>
        </div>
        <span class="font-bold">${formatPrice(article.prix * article.quantite)}</span>
      </div>
    `).join('');
    document.getElementById('modalArticles').innerHTML = articlesHtml;

    document.getElementById('modalTotal').textContent = formatPrice(commande.prix_total);

    detailModal.showModal();
  };

  // Event listeners
  document.getElementById('searchInput').addEventListener('input', applyFilters);
  document.getElementById('filterPeriode').addEventListener('change', (e) => {
    currentPeriod = e.target.value;
    applyFilters();
  });
  document.getElementById('filterTri').addEventListener('change', (e) => {
    currentSort = e.target.value;
    applyFilters();
  });

  document.getElementById('resetFilters').addEventListener('click', () => {
    document.getElementById('searchInput').value = '';
    document.getElementById('filterPeriode').value = 'today';
    document.getElementById('filterTri').value = 'recent';
    currentPeriod = 'today';
    currentSort = 'recent';
    applyFilters();
  });

  // Init
  loadConfig();
  loadHistorique();
</script>

</html>